implement EventTracker
    Implement tag creation/editing similar to https://vueschool.io/articles/vuejs-tutorials/building-a-tag-input-component-with-the-vue-3-composition-api/
    Implement searchAhead for eventTitle similar to https://www.npmjs.com/package/vue3-simple-typeahead
        - searching works!


Start research into how logins will work (spring-boot-security is a good place to start)
    OTPs via SMS or email is the way to go

    BE: Use spring-security logins and JWTs
        Look into refresh tokens
        Encode userId into JWT 
            use to validate all incoming requests
            use to derive userInfo for data models

    FE: implement authStore in pinia so all components can share auth state
            Start with welcome page, so we can welcome by name
        Stub of authStore in-place
        basic flow ->   onMount check store for token and userInfo, 
                    if null push to login page, else show component
                    
        setup axios to add token to all calls
        add error handling for 403s to redirect to login

Build login page
    basics - x

Build registration page
    need to add SMS/email verification page
    refactor login page code verification bit out into its own component so you can reuse it here and verify SMS on registration

Add categories to EventModel - x

Implement day rating
    should allow rating individual days
    should fetch unrated days in a given date range (default now().minusDays(7) thru now())